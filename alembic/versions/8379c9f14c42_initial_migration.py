"""Initial migration

Revision ID: 8379c9f14c42
Revises:
Create Date: 2025-07-18 17:52:29.519587

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "8379c9f14c42"
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_analysis_id"), table_name="analysis")
    op.drop_table("analysis")
    op.drop_index(op.f("ix_indicator_statuses_id"), table_name="indicator_statuses")
    op.drop_table("indicator_statuses")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "indicator_statuses",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("status", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        sa.Column("file", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("id", name=op.f("indicator_statuses_pkey")),
    )
    op.create_index(
        op.f("ix_indicator_statuses_id"), "indicator_statuses", ["id"], unique=False
    )
    op.create_table(
        "analysis",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("status", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("output_file", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("analysis_pkey")),
    )
    op.create_index(op.f("ix_analysis_id"), "analysis", ["id"], unique=False)
    # ### end Alembic commands ###
